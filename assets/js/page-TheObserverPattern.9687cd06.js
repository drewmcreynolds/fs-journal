(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{506:function(e,t,r){"use strict";r.r(t);var a=r(1),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"the-observer-pattern"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#the-observer-pattern"}},[e._v("#")]),e._v(" The Observer Pattern")]),e._v(" "),r("h2",{attrs:{id:"what-problems-does-the-observer-pattern-seek-to-solve"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#what-problems-does-the-observer-pattern-seek-to-solve"}},[e._v("#")]),e._v(" What problems does the Observer Pattern seek to solve?")]),e._v(" "),r("p",[e._v("It allows to build reuseable code that would be helpful to the clint-side scripting.")]),e._v(" "),r("h2",{attrs:{id:"what-are-the-three-mechanisms-of-the-observer-pattern"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#what-are-the-three-mechanisms-of-the-observer-pattern"}},[e._v("#")]),e._v(" What are the three mechanisms of the observer pattern?")]),e._v(" "),r("p",[e._v("The three mechanisms of the observer pattern are subscribe, unsubscribe, and broadcast.")]),e._v(" "),r("h2",{attrs:{id:"review-the-code-generated-from-the-bcw-template-and-reflect-on-the-proxy-objects-from-yesterday-and-your-understanding-of-the-observer-pattern-today-with-this-knowledge-explain-how-the-magic-of-the-bcw-template-uses-these-two-concepts-to-manage-and-update-the-dom"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#review-the-code-generated-from-the-bcw-template-and-reflect-on-the-proxy-objects-from-yesterday-and-your-understanding-of-the-observer-pattern-today-with-this-knowledge-explain-how-the-magic-of-the-bcw-template-uses-these-two-concepts-to-manage-and-update-the-dom"}},[e._v("#")]),e._v(" Review the code generated from the bcw-template and reflect on the proxy objects from yesterday, and your understanding of the observer pattern today. With this knowledge, explain how the magic of the bcw-template uses these two concepts to manage and update the dom.")]),e._v(" "),r("p",[e._v("The Observer pattern add more versitilty to the client/user side and seems to be a more fluid and reuseable coding pattern.")]),e._v(" "),r("h2",{attrs:{id:"partner-afternoon-project"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#partner-afternoon-project"}},[e._v("#")]),e._v(" Partner afternoon project")]),e._v(" "),r("p",[e._v("https://jacksonschacher.github.io/BobbyLobby/")])])}),[],!1,null,null,null);t.default=o.exports}}]);